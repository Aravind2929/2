{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Home \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.search = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.search]]), _createElementVNode(\"p\", null, \" search term - \" + _toDisplayString($setup.search), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.matchingNames, name => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: name\n    }, _toDisplayString(name), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.handleClick && $setup.handleClick(...args))\n  }, \" Stop Watching \")]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;gCACTC,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;;uBADFC,oBAMM,KANN,cAMM,CALJC,UAKI,kBAJJF,oBAAoC,OAApC,EAAoC;IAA7BG,IAAI,EAAC,MAAwB;+DAARC,gBAAMC;EAAE,CAApC;;EAAA,kBAA4BD,gBAIxB,EAHJJ,oBAAmC,GAAnC,EAAmC,IAAnC,EAAG,oBAAeM,iBAAGF,aAAH,CAAlB,EAA2B;EAAA;EAA3B,CAGI,qBAFJH,oBAAiEM,SAAjE,EAAiE,IAAjE,EAAiEC,YAA7CJ,oBAA6C,EAArDK,IAAqB,IAAjB;yBAAhBR,oBAAiE,KAAjE,EAAiE;MAA7BS,GAAG,EAAED;IAAwB,CAAjE,EAA6CH,iBAAMG,IAAN,CAA7C,EAAuD;IAAA;IAAvD;GAAiE,CAAjE;;EAAA,CAEI,GADJT,oBAAqD,QAArD,EAAqD;IAA5CW,OAAK,yCAAEP,iDAAF;EAAuC,CAArD,EAA6B,iBAA7B,CACI,CANN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","type","$setup","$event","_toDisplayString","_Fragment","_renderList","name","key","onClick"],"sourceRoot":"","sources":["/home/accesss/Desktop/Vue3/dojo-blog/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1> Home </h1>\n    <input type=\"text\" v-model=\"search\">\n    <p> search term - {{ search }} </p>\n    <div v-for=\"name in matchingNames\" :key=\"name\"> {{ name }} </div>\n    <button @click=\"handleClick\"> Stop Watching </button>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, watch, watchEffect } from \"vue\";\n\nexport default {\n  name: 'HomeView',\n  setup() {\n     const search = ref('')\n     const names = ref([ 'Aravind', 'Ram', 'Charan', 'Prabhu', 'Raghu', 'Rajiv' ])\n\n     const stopWatch = watch(search, () =>{\n         console.log('watch function ran')\n     })\n\n     const stopEffect = watchEffect(() =>{\n         console.log('watcheffect function ran', search.value)\n     })\n\n     const matchingNames = computed(() => {\n        return names.value.filter((name) => name.includes(search.value))\n     })\n\n     const handleClick = () => {\n       stopWatch()\n       stopEffect()\n     }\n\n     return { names, search, matchingNames, handleClick }\n  }\n }\n</script>\n"]},"metadata":{},"sourceType":"module"}
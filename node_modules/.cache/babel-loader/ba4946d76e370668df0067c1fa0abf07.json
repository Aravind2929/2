{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PostList = _resolveComponent(\"PostList\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), $setup.posts.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_PostList, {\n    post: $setup.posts\n  }, null, 8\n  /* PROPS */\n  , [\"post\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Loading... \"))]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;;;;;;;;;uBAAXC,oBAMM,KANN,cAMM,CALOC,8BAAXD,oBAAqC,KAArC,EAAqCE,UAArC,EAAqCC,iBAAfF,YAAe,CAArC,EAA2B;EAAA;EAA3B,sCAKI,EAJOA,aAAMG,wBAAjBJ,oBAEM,KAFN,EAEMK,UAFN,EAEM,CADNC,aAA0BC,mBAA1B,EAA0B;IAAfC,IAAI,EAAEP;EAAS,CAA1B,EAAsB,IAAtB,EAAsB;EAAA;EAAtB,EAAsB,QAAtB,CACM,CAFN,oBAGAD,oBAA8B,KAA9B,EAA8BS,UAA9B,EAAY,cAAZ,EACI,CANN","names":["class","_createElementBlock","$setup","_hoisted_2","_toDisplayString","length","_hoisted_3","_createVNode","_component_PostList","post","_hoisted_4"],"sourceRoot":"","sources":["/home/accesss/Desktop/Vue3/dojo-blog/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div v-if=\"error\"> {{ error }} </div>\n    <div v-if=\"posts.length\">\n    <PostList :post=\"posts\" />\n    </div>\n    <div v-else> Loading... </div>\n  </div>\n</template>\n\n<script>\nimport PostList from '../components/PostList.vue';\nimport { ref } from \"vue\";\n\nexport default {\n  name: 'HomeView',\n  components: { PostList },\n  setup() {\n     const posts = ref([])\n     const error = ref(null)\n\n     const load = async () => {\n       try {\n        let data = await fetch('http://localhost:3000/posts')\n        if (!data.ok) {\n          throw Error('no data available')\n        }\n        posts.value = await data.json()\n       }\n       catch (err) {\n        err.value = err.message\n        console.log(error.value);\n       }\n     }\n\n     load()\n\n     return { posts, error }\n  }\n }\n</script>\n"]},"metadata":{},"sourceType":"module"}